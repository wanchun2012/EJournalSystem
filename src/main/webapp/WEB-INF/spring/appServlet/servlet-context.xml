<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven/>
	
	<!-- Package to scan for controllers, services, etc -->
	<context:component-scan base-package="com.teamo.ejournal.core" />
	<context:annotation-config />
	
	<!-- enable @PreAuthorize -->
	<sec:global-method-security pre-post-annotations="enabled">
		<sec:expression-handler ref="expressionHandler"/>
	</sec:global-method-security>
	
	<beans:bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
    	<beans:property name="permissionEvaluator" ref="permissionEvaluator"/>
	</beans:bean>  
 
	<beans:bean id="permissionEvaluator" class="com.teamo.ejournal.core.login.SystemPermissionEvaluator"/>
	

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- bind your messages.properties -->
	<beans:bean class="org.springframework.context.support.ResourceBundleMessageSource"
		id="messageSource">
		<beans:property name="basename" value="messages" />
	</beans:bean>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- File upload bean and properties -->
	<!-- doc: http://static.springsource.org/spring/docs/3.0.0.M3/reference/html/ch16s08.html -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <!-- one of the properties available; the maximum file size in bytes -->
	    <!-- ps. I decided to limit in controller, since I couldn't find a way to handle server exception -->
	    <!-- ps2. @ExceptionHandler(IOException.class) search for it if interested -->
	    <!-- beans:property name="maxUploadSize" value="100000"/ -->
	</beans:bean>
	
	
	
</beans:beans>
