<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 xmlns:beans="http://www.springframework.org/schema/beans"
 xsi:schemaLocation="
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.1.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
 
 <!-- debug / -->
 
 <http auto-config="true" use-expressions="true">
 <!-- It's done using @PreAuthorize on Controllers directly now.
  <intercept-url pattern="/editor/**" access="hasAnyRole('ROLE_ADMIN','ROLE_EDITOR')" />
  <intercept-url pattern="/author/**" access="hasAnyRole('ROLE_ADMIN','ROLE_AUTHOR')" />
  <intercept-url pattern="/reviewer/**" access="hasAnyRole('ROLE_ADMIN','ROLE_REVIEWER')" />
  <intercept-url pattern="/home" access="permitAll" />
  -->
  <!-- form-login login-page="/" default-target-url="/?login=true"
			authentication-failure-url="/?login=false" / -->
  <form-login authentication-failure-handler-ref="loginAuthenticationFailureHandler" 
  			  authentication-success-handler-ref="loginAuthenticationSuccessHandler"
  			  login-page="/" />
  <logout invalidate-session="true" logout-success-url="/" />
 </http>
 
 <beans:bean id="userDetailsService" class="com.teamo.ejournal.core.login.LoginServiceImpl"></beans:bean>
 
 <beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
  <beans:property name="userDetailsService" ref="userDetailsService" />
 </beans:bean>
 
 <beans:bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
  <beans:property name="providers">
   <beans:list>
    <beans:ref local="daoAuthenticationProvider" />
   </beans:list>
  </beans:property>
 </beans:bean>

 <authentication-manager>
  <authentication-provider user-service-ref="userDetailsService">
   <password-encoder hash="plaintext" /> <!-- could use "md5", but will compare with md5 stored at DB also. -->
  </authentication-provider>
 </authentication-manager>
 
 <!-- (i couldn't make it work) global-method-security pre-post-annotations="enabled"/-->
 
 <!-- 
 
   <authentication-manager alias="authenticationManager">
  <authentication-provider>
   <user-service>
    <user name="chuck.norris" password="cnorris" authorities="ROLE_ADMIN" />
    <user name="user" password="user" authorities="ROLE_USER" />
   </user-service>
  </authentication-provider>
 </authentication-manager>
 
  -->
 
 <!-- authentication-manager>
  <authentication-provider ref="customAuthenticationProvider"/>
 </authentication-manager>
 
 <beans:bean id="sampleAuthenticationProvider"  class="com.roadtobe.supaldubey.examples.spring.security.SampleAuthProvider"  / -->
 
 
</beans:beans>